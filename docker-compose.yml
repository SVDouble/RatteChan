x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  traefik:
    image: traefik:latest
    container_name: "rattechan-traefik"
    ports:
      - "80:80"
    networks:
      - rattechan_core
      - rattechan_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik:ro
    env_file:
      - .env
    restart: 'unless-stopped'
    security_opt:
      - 'no-new-privileges:true'
    healthcheck:
      test: 'wget --quiet --spider http://localhost:8082/ping || exit 1'
      interval: '30s'
      timeout: '3s'
      start_period: '5s'
      retries: 3
    logging: *default-logging


  redis:
    image: redis/redis-stack:latest
    container_name: 'rattechan-redis'
    environment:
      RI_PROXY_PATH: "/redis"
    ports:
      - "6379:6379"
    networks:
      - rattechan_core
      - rattechan_proxy
    labels:
      - "traefik.enable=true"
      - 'traefik.docker.network=rattechan_proxy'
      - "traefik.http.routers.redis.rule=Host(`${SERVER_NAME}`) && PathPrefix(`/redis`)"
      - "traefik.http.routers.redis.entrypoints=http"
      - 'traefik.http.routers.redis.middlewares=no-auth-secured@file'
      - "traefik.http.services.redis.loadbalancer.server.port=8001"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging: *default-logging

  grafana:
    image: grafana/grafana:latest
    container_name: "rattechan-grafana"
    networks:
      - rattechan_core
      - rattechan_proxy
    volumes:
      - rattechan_grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: "redis-datasource"
      GF_SERVER_DOMAIN: ${SERVER_NAME}
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: true
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - 'traefik.docker.network=rattechan_proxy'
      - "traefik.http.routers.grafana.rule=Host(`${SERVER_NAME}`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=http"
      - 'traefik.http.routers.grafana.middlewares=no-auth-secured@file'
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    security_opt:
      - 'no-new-privileges:true'
    logging: *default-logging

  loki:
    image: grafana/loki:latest
    container_name: "rattechan-loki"
    ports:
      - "3100:3100"
    networks:
      - rattechan_core
      - rattechan_proxy
    volumes:
      - rattechan_loki_data:/etc/loki:rw
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - 'traefik.docker.network=rattechan_proxy'
      - "traefik.http.routers.loki.rule=Host(`${SERVER_NAME}`) && PathPrefix(`/loki`)"
      - "traefik.http.routers.loki.entrypoints=http"
      - 'traefik.http.routers.loki.middlewares=no-auth-secured@file'
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
    logging: *default-logging

  promtail:
    image: grafana/promtail:latest
    container_name: "rattechan-promtail"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro # Set as read-only since Promtail only reads logs
      - ./promtail/config.yml:/etc/promtail/config.yml:ro  # Ensure config is read-only
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for metadata
      - rattechan_promtail_data:/etc/promtail  # Volume for storing positions
    networks:
      - rattechan_core
    restart: unless-stopped
    logging: *default-logging

volumes:
  rattechan_grafana_data:
  rattechan_loki_data:
  rattechan_promtail_data:

networks:
  rattechan_core:
  rattechan_proxy:
    external: true